import networkx as nx
import matplotlib.pyplot as plt

# Створення графа
G = nx.DiGraph()

# Додавання ребер до графа (пропускні здатності)
edges = [
    ("Термінал 1", "Склад 1", 25),
    ("Термінал 1", "Склад 2", 20),
    ("Термінал 1", "Склад 3", 15),
    ("Термінал 2", "Склад 3", 15),
    ("Термінал 2", "Склад 4", 30),
    ("Термінал 2", "Склад 2", 10),
    ("Склад 1", "Магазин 1", 15),
    ("Склад 1", "Магазин 2", 10),
    ("Склад 1", "Магазин 3", 20),
    ("Склад 2", "Магазин 4", 15),
    ("Склад 2", "Магазин 5", 10),
    ("Склад 2", "Магазин 6", 25),
    ("Склад 3", "Магазин 7", 20),
    ("Склад 3", "Магазин 8", 15),
    ("Склад 3", "Магазин 9", 10),
    ("Склад 4", "Магазин 10", 20),
    ("Склад 4", "Магазин 11", 10),
    ("Склад 4", "Магазин 12", 15),
    ("Склад 4", "Магазин 13", 5),
    ("Склад 4", "Магазин 14", 10),
]

G.add_weighted_edges_from(edges, weight='capacity')

# Термінали і магазини
sources = ["Термінал 1", "Термінал 2"]
sinks = [f"Магазин {i}" for i in range(1, 15)]

# Загальний потік
total_flow = 0

# Виведення результатів по кожному терміналу і магазину
for source in sources:
    for sink in sinks:
        flow_value, flow_dict = nx.maximum_flow(G, source, sink)
        total_flow += flow_value
        
        # Виведення тільки необхідної інформації
        print(f"Максимальний потік з {source} в {sink}: {flow_value}")

# Загальний максимальний потік по мережі
print(f"\nЗагальний максимальний потік по мережі: {total_flow}")

# Візуалізація графа (не обов'язково, якщо не потрібно)
plt.figure(figsize=(15, 12))

pos = {
    "Термінал 1": (0, 6),
    "Термінал 2": (0, -6),
    "Склад 1": (9, 3),
    "Склад 2": (9, 0),
    "Склад 3": (9, -3),
    "Склад 4": (9, -6),
}

pos.update({
    "Магазин 1": (12, 4.5),
    "Магазин 2": (12, 3.5),
    "Магазин 3": (12, 2.5),
    "Магазин 4": (12, -0.5),
    "Магазин 5": (12, -1.5),
    "Магазин 6": (12, -2.5),
    "Магазин 7": (12, -4.5),
    "Магазин 8": (12, -5),
    "Магазин 9": (12, -5.5),
    "Магазин 10": (12, -7),
    "Магазин 11": (12, -7.5),
    "Магазин 12": (12, -8),
    "Магазин 13": (12, -8.5),
    "Магазин 14": (12, -9),
})

nx.draw(G, pos, with_labels=True, node_size=3000, node_color='skyblue', font_size=10, font_weight='bold')

labels = nx.get_edge_attributes(G, 'capacity')
nx.draw_networkx_edge_labels(G, pos, edge_labels=labels)

plt.title("Граф логістичної мережі з пропускними здатностями")
plt.show()
